name: 'CI-CD'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build-test:
    name: Back-end build and test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Install Maven dependencies
        run: mvn install
      - name: Run tests
        run: mvn verify
      - name: Add back-end coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: back/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 60
          title: Back-end Code Coverage
          update-comment: false
          pass-emoji: ':green_circle:'
          fail-emoji: ':red_circle:'
      - name: Upload JaCoCo coverage report as a workflow artifact
        uses: actions/upload-artifact@v4
        id: backend-coverage-artifact
        with:
          name: backend-jacoco-report
          path: back/target/site/jacoco/
      - name: Output coverage link
        run: echo 'Back-end coverage report is available at ${{ steps.backend-coverage-artifact.outputs.artifact-url }}'
      - name: Add output to PR comment
        uses: mshick/add-pr-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            **Back-end coverage report is available at ${{ steps.backend-coverage-artifact.outputs.artifact-url }}**

  frontend-build-test:
    name: Front-end build and test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js 16.10.0
        uses: actions/setup-node@v4
        with:
          node-version: '16.10.x'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test:ci
      - name: Front-end Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: front/coverage/code-coverage.xml
          badge: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Upload coverage report as a workflow artifact
        uses: actions/upload-artifact@v4
        id: frontend-coverage-artifact
        with:
          name: frontend-coverage-report
          path: front/coverage/
      - name: Output coverage link
        run: echo 'Front-end coverage report is available at ${{ steps.frontend-coverage-artifact.outputs.artifact-url }}'
      - name: Add Front-end Coverage PR to Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
          message: |
            Front-end Code Coverage
      - name: Add output to PR comment
        uses: mshick/add-pr-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            **Front-end coverage report is available at ${{ steps.frontend-coverage-artifact.outputs.artifact-url }}**

  backend-quality:
    name: Back-end code quality
    needs: backend-build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  frontend-quality:
    name: Front-end code quality
    needs: frontend-build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create coverage directory
        run: |
          mkdir coverage
      - name: Download artifact frontend-coverage-report
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}

  deploy:
    name: Deployment
    needs: [backend-quality, frontend-quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Back-end build and push
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp:backend
      - name: Front-end build and push
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp:frontend
